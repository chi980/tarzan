pipeline {
    agent any
    tools {
        nodejs 'NodeJS 22.6.0' // NodeJS 설치
    }
    
    environment {
        FRONT_CONTAINER_NAME = "tarzan-front-container"
        FRONT_IMAGE_NAME = "tarzan-front-image"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm  // 소스 코드 checkout
            }
        }
        stage('Docker Delete') {
            steps {
                script {
                    // 기존 Docker 컨테이너 및 이미지 삭제
                    try {
                        sh "docker stop ${FRONT_CONTAINER_NAME} || true"
                        sh "docker rm -f ${FRONT_CONTAINER_NAME} || true"
                    } catch (Exception e) {
                        echo "Docker container ${FRONT_CONTAINER_NAME} does not exist. Skip."
                    }
                    try {
                        sh "docker image rm ${FRONT_IMAGE_NAME} || true"
                    } catch (Exception e) {
                        echo "Docker image ${FRONT_IMAGE_NAME} does not exist. Skip."
                    }
                }
            }
        }

        stage('Dockerize') {
            steps {
                script {
                    // Docker 이미지 빌드
                    dir('Frontend') {
                        dir('tarzan'){
                            sh "docker build -t ${FRONT_IMAGE_NAME} -f Dockerfile ."
                        }
                    }
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    // Docker 컨테이너 실행
                    sh "docker run --name ${FRONT_CONTAINER_NAME} -d -p 8080:80 ${FRONT_IMAGE_NAME}"
                    // 실행 중인 Docker 컨테이너 확인
                    sh "docker ps"
                }
            }
        }
    }
}

