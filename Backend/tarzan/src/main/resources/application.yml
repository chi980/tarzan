spring:
  application:
    name: tarzan

  session:
    store-type: redis # session 을 redis 로 설정
#  redis:
#    host: 3.35.149.241
#    port: 6379
#    password: "strawberry_tarzan_8960!"
  datasource:
#    url: jdbc:postgresql://3.35.149.241/tarzan
#    username: postgres
#    password: '@tarzan_zxcvbnm123!'
    url: jdbc:postgresql://localhost/tarzan
    username: postgres
    password: '1234'
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
      dialect: org.hibernate.spatial.dialect.postgis.PostgisDialect
    properties:
      hibernate:
        show_sql: true
        format_sql: true
    use_sql_comments: true
    database: postgresql

  security:
    oauth2:
      client:
        registration:
          google:
            client-name: google
            client-id: 47134587732-6gq6500f5srhmscdv8bektl4uovnqr3t.apps.googleusercontent.com
            client-secret: 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
            redirect-uri: http://localhost:8080/login/oauth2/code/google
            authorization-grant-type: authorization_code
            scope:
              - profile
              - email
          kakao:
#            rest api key
            client-id: b70dc9585929d8782aa4c22017317c27
            client-secret: MKwCIvKkVfr4dziIyCfGjQzDdUYdeZ0O
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope: profile_nickname,profile_image,account_email
            client-name: kakao

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id


  batch:
    job:
#      name: ${job.name:NONE}
      enabled: true
    jdbc:
#      initialize-schema: never
       initialize-schema: always

  web:
    resources:
      static-locations: classpath:/static
jwt:
  secretKey: f3ea5bb104ef3a66b65f87dacf67411fa982fdd62bc99da583d3cd37102ff435
  access:
    expiration: 3600000 # 1시간(60분) (1000L(ms -> s) * 60L(s -> m) * 60L(m -> h))
    header: Authorization

  refresh:
    expiration: 1209600000 #  (1000L(ms -> s) * 60L(s -> m) * 60L(m -> h) * 24L(h -> 하루) * 14(2주))
    header: Authorization-refresh
